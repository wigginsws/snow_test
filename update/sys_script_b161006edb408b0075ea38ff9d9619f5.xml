<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_norca_med_cam_claim_document</collection>
        <condition/>
        <description>Makes service call to IR to load the attachment</description>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>CAM-DOC-Load Attachment</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	if (current.case_ref && current.sor_id && current.sor_reference_id) { // only execute when there are case docs
		
		var fileId = "id:" + current.sor_id + ", refId:" + current.sor_reference_id;

		gs.info("[loadIrFileBR] Called for file " + fileId);
		var irWsUtils = new cam_IRWebServiceUtils();
		var encodedContents;
		try {
			encodedContents = irWsUtils.getDocumentContents(current);
		} catch (err) {
			gs.error(err);
		}
		if (encodedContents) {
			gs.debug("[loadIrFileBR] for file " + fileId + " got encoded contents");
			var attachment = new GlideSysAttachment();
			var attachmentId = attachment.writeBase64( current, getSanitizedFileName(current.name), gs.getProperty(cam.SCOPE_ID + ".ir_ws_file_output_mime_type"), encodedContents); //current.sor_id + "-" + current.sor_reference_id
			gs.debug("[loadIrFileBR] for file " + fileId + " new attachment " + attachmentId);
		} else {
			gs.debug("[loadIrFileBR] no contents for file " + fileId);
		}
		
	}
	
})(current, previous);

function getSanitizedFileName(docName) {
	var retVal = docName.replace(/[\\\/\$\^\*]/g, "");
	if (retVal.length>99) {
		retVal = retVal.substring( 0, 99);
	}
	return retVal;
}
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>rrao</sys_created_by>
        <sys_created_on>2017-07-21 20:51:28</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b161006edb408b0075ea38ff9d9619f5</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>CAM-DOC-Load Attachment</sys_name>
        <sys_overrides/>
        <sys_package display_value="Medical Claim Management" source="x_norca_med_cam">4427741adb53fe8023cdd92b5e961942</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Medical Claim Management">4427741adb53fe8023cdd92b5e961942</sys_scope>
        <sys_update_name>sys_script_b161006edb408b0075ea38ff9d9619f5</sys_update_name>
        <sys_updated_by>jpolk</sys_updated_by>
        <sys_updated_on>2017-09-18 20:47:00</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=b161006edb408b0075ea38ff9d9619f5"/>
</record_update>
