<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_norca_med_cam.cam_CoverageVerificationWSUtils</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>cam_CoverageVerificationWSUtils</name>
        <script><![CDATA[var cam_CoverageVerificationWSUtils = Class.create();
cam_CoverageVerificationWSUtils.prototype = Object.extendsObject( cam_CustomRestWsUtils, {
	
    initialize: function() {
    },

    type: 'cam_CoverageVerificationWSUtils',
	
	loadCoveragesFromClaimRecord: function(claimGR) {
		
		var dataSyncUtils = new cam_DataSyncUtils();
		
		var insuredGR = dataSyncUtils.getRecordBySysId(cam.SCOPE_ID + "_entity", claimGR.u_insured);
		var countyCode = "";
		if (claimGR.claim_county_code) {
			countyCode = claimGR.claim_county_code;
		} else {
			var countyGR = dataSyncUtils.getRecordBySysId(cam.SCOPE_ID + "_county_lookup", claimGR.u_county);
			if (countyGR) {
				countyCode = countyGR.county_code;
			}
		}
		var params = {
			'LOBCode': this.createParamValueObject( claimGR.u_loss_type?claimGR.u_loss_type:"PL" ),
			'LossDate': this.createParamValueObject( this.formatDate(claimGR.u_loss_date)),
			'IncidentStartDate': this.createParamValueObject( this.formatDate(claimGR.getValue("u_incident_start_date" ))),
			'IncidentEndDate': this.createParamValueObject( this.formatDate(claimGR.getValue("u_incident_end_date"))),
			'CountyCode': this.createParamValueObject( countyCode ),
			'InsuredFK': this.createParamValueObject( insuredGR.sor_id ),
			'StateCode': this.createParamValueObject( claimGR.getValue("claim_state_code")),
			'ReportDate': this.createParamValueObject(this.formatDate(claimGR.report_date? claimGR.report_date: claimGR.u_loss_date))
		};
		
		var fn = function(responseBody) {
			var responseObj = JSON.parse(responseBody);
			if (gs.isDebugging()) gs.debug("[loadCoveragesFromClaimRecord] response " + responseBody);
			if (Array.isArray(responseObj)) {
				return responseObj;
			} else {
				gs.error("[loadCoveragesFromClaimRecord] Invalid web service response, not an array");
				throw "Invalid web service response";
			}
		};		
		
		return this.processMessageWithFunction( cam.SCOPE_ID + ".CAM-CoverageVerification", "GetCoverageInfo", params, claimGR, fn);
		
	},
	
	loadCoveragesFromClaimRecordId: function(claimSysId) {
		var gr = new GlideRecord(cam.SCOPE_ID + "_claim");
		if (gr.get(claimSysId)) {
			return this.loadCoveragesFromClaimRecord(gr);
		}
		return null;		
	},
	
	compareOptionsForSort: function( a, b) {
		  if (a.is_coverage_valid=="Valid" && b.is_coverage_valid=="Invalid") {
			return -1;
			  
		  } else if (a.is_coverage_valid=="Invalid" && b.is_coverage_valid=="Valid") {
			return 1;
			  
		  } else if (a.is_coverage_valid == b.is_coverage_valid) {
			  var date_a = new Date(a.effective_from_date); //accounting_from_date
			  var date_b = new Date(b.effective_from_date);
			  if (date_a.getTime()>date_b.getTime()) {
				  return -1;
			  } else if (date_a.getTime()<date_b.getTime()) {
				  return 1;
			  }
			  return 0;
			  
		  }
		  return 0;
	}
	
});
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>rrao</sys_created_by>
        <sys_created_on>2017-07-19 21:16:45</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>6e85b171db400b0075ea38ff9d9619bc</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>cam_CoverageVerificationWSUtils</sys_name>
        <sys_package display_value="Medical Claim Management" source="x_norca_med_cam">4427741adb53fe8023cdd92b5e961942</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Medical Claim Management">4427741adb53fe8023cdd92b5e961942</sys_scope>
        <sys_update_name>sys_script_include_6e85b171db400b0075ea38ff9d9619bc</sys_update_name>
        <sys_updated_by>rrao</sys_updated_by>
        <sys_updated_on>2017-08-04 19:33:18</sys_updated_on>
    </sys_script_include>
</record_update>
