<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_norca_med_cam_participant</collection>
        <condition/>
        <description>Prevent participants with the same name (entity), role, and claim</description>
        <execute_function>false</execute_function>
        <filter_condition table="x_norca_med_cam_participant">entityISNOTEMPTY^claimISNOTEMPTY^role!=EXAMINER^EQ<item endquery="false" field="entity" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="claim" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="role" goto="false" newquery="false" operator="!=" or="false" value="EXAMINER"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>CAM-CPTCPNT-Prevent Dup Participants</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	//query table to see if there is an existing particpant with current entity and role
	var gr = new GlideRecord('x_norca_med_cam_participant');
		gr.addQuery('claim', current.claim);
		gr.addQuery('entity', current.entity);
		gr.addQuery('role', current.role);
		gr.addQuery('sys_id', '!=', current.sys_id);
		gr.query();
	if(gr.hasNext()){
		
		current.setAbortAction(true);
		gs.addErrorMessage('Participant could not be created. There is an existing claim participant with this current entity and role.');
		//gs.debug("[DuplicateParticipant] " + gs.getUserName() + " tried to insert a duplicate participant - " + current.getDisplayName());
		
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>jsavage</sys_created_by>
        <sys_created_on>2017-10-09 17:26:28</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>eb2f8b44db398f4075ea38ff9d9619af</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>CAM-CPTCPNT-Prevent Dup Participants</sys_name>
        <sys_overrides/>
        <sys_package display_value="Medical Claim Management" source="x_norca_med_cam">4427741adb53fe8023cdd92b5e961942</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Medical Claim Management">4427741adb53fe8023cdd92b5e961942</sys_scope>
        <sys_update_name>sys_script_eb2f8b44db398f4075ea38ff9d9619af</sys_update_name>
        <sys_updated_by>jpolk</sys_updated_by>
        <sys_updated_on>2017-10-26 18:06:36</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=eb2f8b44db398f4075ea38ff9d9619af"/>
</record_update>
