<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_norca_med_cam.cam_ReserveTransactionWSUtils</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>cam_ReserveTransactionWSUtils</name>
        <script><![CDATA[var cam_ReserveTransactionWSUtils = Class.create();
cam_ReserveTransactionWSUtils.prototype = Object.extendsObject(cam_CustomRestWsUtils, {
	initialize: function() {
	},
	
	type: 'cam_ReserveTransactionWSUtils',
	
	saveReserve: function(currentGR){
		gs.debug("[saveReserve] called for " + currentGR.getDisplayValue());
		
		var dataSyncUtils = new cam_DataSyncUtils();
		var claim_id = dataSyncUtils.getFieldForRecordBySysId(cam.SCOPE_ID + "_claim", currentGR.claim_number, "claim_id");
		var reserve = new GlideRecord('x_norca_med_cam_reserves');
		if(claim_id == '') {
			gs.addErrorMessage("This transaction to update the reserves will not be sent to OASIS because coverage has not been applied");
			
			return;
		}
		if(currentGR.trans_type == '') {
			
			return;
		}
		
		
		var res_amt;
		var org_amt;
		var transType;
		if(currentGR.trans_type == "Indemnity Res" && reserve.get('claim_number', currentGR.claim_number)){
			org_amt = reserve.getValue('previous_indemnity_res_amount');
			transType = 'INDEMNITY';
			res_amt = reserve.getValue('indemnity_res');
			
		}
		if(currentGR.trans_type == "Expense Res" && reserve.get('claim_number', currentGR.claim_number)){
			org_amt = reserve.getValue('previous_expense_res_amount');
			transType = 'EXPENSE';
			res_amt = reserve.getValue('expense_res');
		}
		
		
		var params = {
			'ClaimPK': this.createParamValueObject( claim_id ),
			'OrgResAmt': this.createParamValueObject( org_amt ),
			'ResAmt': this.createParamValueObject( res_amt ),
			'TransTypeCode': this.createParamValueObject( transType )
		};
		
		
		var fn = function(responseBody) {
			var responseObj = JSON.parse(responseBody);
			if (responseObj && responseObj["status"] && responseObj["status"]=="Success") {
				currentGR.setValue("sor_pk", responseObj["TRANS_PK"]);
			} else {
				var message = "";
				if (responseObj) {
					message = ", message " + responseObj["Service_Message"];
				}
				//gs.error("Could not update Reserve " + message);
				//gs.addErrorMessage("Could not update Reserve " + message);
				throw new Error("Could not update Reserve, message: " + message);
			}
			return responseObj;
			
			
		};
		
		return this.processMessageWithFunction( cam.SCOPE_ID + ".CAM-ClaimReserves", "UpdateReserves", params, currentGR, fn);
		
	},
	
	getClaimID: function(currentGR){
		var dataSyncUtils = new cam_DataSyncUtils();
		var claim_id = dataSyncUtils.getFieldForRecordBySysId(cam.SCOPE_ID + "_claim", currentGR.claim_number, "claim_id");
		//var claim_sync_status = dataSyncUtils.getFieldForRecordBySysId(cam.SCOPE_ID + "_claim", currentGR.claim_number, "commit_status");
		if(!claim_id)
			return 'no';
		else
			return 'yes';
	}
	
	
});
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>jsavage</sys_created_by>
        <sys_created_on>2017-09-01 13:20:29</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>e05e6e3fdbbc4b8075ea38ff9d961941</sys_id>
        <sys_mod_count>60</sys_mod_count>
        <sys_name>cam_ReserveTransactionWSUtils</sys_name>
        <sys_package display_value="Medical Claim Management" source="x_norca_med_cam">4427741adb53fe8023cdd92b5e961942</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Medical Claim Management">4427741adb53fe8023cdd92b5e961942</sys_scope>
        <sys_update_name>sys_script_include_e05e6e3fdbbc4b8075ea38ff9d961941</sys_update_name>
        <sys_updated_by>jpolk</sys_updated_by>
        <sys_updated_on>2017-10-26 18:04:23</sys_updated_on>
    </sys_script_include>
</record_update>
