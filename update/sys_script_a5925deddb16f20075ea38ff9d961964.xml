<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_norca_med_cam_claim</collection>
        <condition/>
        <description>Validated</description>
        <execute_function>false</execute_function>
        <filter_condition table="x_norca_med_cam_claim">counselVALCHANGES^ORu_insuredVALCHANGES^ORclaimantVALCHANGES^ORassigned_toVALCHANGES^EQ<item endquery="false" field="counsel" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="u_insured" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="claimant" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="assigned_to" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>CAM-CLAIM-Create Participant</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
//var entity = ['claimant', 'counsel', 'u_insured', 'patient'];
	//for(i = 0; i <= entity.length; i++){
	//	if(entity[i].changes()){
	//		createParticipant(current[entity[i]], current[entity[i]].classification);
	//	}
	//}
	

		var counsel = current.counsel;
		var claimant = current.claimant;
		var insured = current.u_insured;
		var patient = current.patient;
		var assignedTo = current.assigned_to;
		var role;
		if(counsel.changes() && counsel){
		role = 'DINDATTY';
			createParticipant(counsel, role);
		}
		if(claimant.changes() && claimant){
		role = 'CLAIMANT';
			createParticipant(claimant, role);
		}
		if(insured.changes() && insured){
		role = 'Insured';
			createParticipant(insured, role);
		}
		if(patient.changes() && patient){
		role = 'PATIENT';
			createParticipant(patient, role);
		}
		var user = getAssignedTo();
		
		if(assignedTo.changes() && userHasRole(assignedTo, 'x_norca_med_cam.claims_specialist')){
		role = 'EXAMINER';
			createParticipant(user, role);
		}
		if(assignedTo.changes() && userHasRole(assignedTo, 'x_norca_med_cam.claims_director')){
		role = 'CLMSUPER';
			createParticipant(user, role);
		}
	
		
		
	
	
	
	
	function getAssignedTo(){
		var ent = new GlideRecord('x_norca_med_cam_entity');
		ent.addQuery('user', current.assigned_to);
		ent.query();
		if(ent.next()){
			return ent.sys_id;
		}
	}
	
	
	
	function createParticipant(user, role){
		var gr = new GlideRecord('x_norca_med_cam_participant');
		var claim = current.sys_id;
		var gd = new GlideDate();
		gr.addEncodedQuery('role='+role+'^effective_to='+""+'^claim='+claim);
		gr.query();
		if(gr.next()){
			
			gr.setValue('effective_to', gd);
			gr.update();
			
			gr.newRecord();
			gr.setValue('effective_from', gd);
			gr.setValue('entity', user);
			gr.setValue('role', role);
			gr.setValue('claim', claim);
			gr.insert();
			gs.addInfoMessage(gr.role.getDisplayValue() + ': ' + gr.entity.getDisplayValue() + ' has been added to the Participant log. The effective to date has been set for the previous ' + gr.role.getDisplayValue() + '.');
			
		}
		else if(!gr.next()){
			gr.newRecord();
			gr.setValue('effective_from', gd);
			gr.setValue('entity', user);
			gr.setValue('role', role);
			gr.setValue('claim', claim);
			gr.insert();
			gs.addInfoMessage(gr.role.getDisplayValue() + ': ' + gr.entity.getDisplayValue() + ' has been added to the Participant log.');
		}
	}

	function userHasRole(userID, role) {  
  var uhrRec = new GlideRecord('sys_user_has_role');  
  
  uhrRec.addQuery('user', userID);  
  uhrRec.addQuery('role.name', role);  
  uhrRec.query();  
  return uhrRec.hasNext();  
}  


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>jsavage</sys_created_by>
        <sys_created_on>2017-04-23 01:45:25</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a5925deddb16f20075ea38ff9d961964</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>CAM-CLAIM-Create Participant</sys_name>
        <sys_overrides/>
        <sys_package display_value="Medical Claim Management" source="x_norca_med_cam">4427741adb53fe8023cdd92b5e961942</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Medical Claim Management">4427741adb53fe8023cdd92b5e961942</sys_scope>
        <sys_update_name>sys_script_a5925deddb16f20075ea38ff9d961964</sys_update_name>
        <sys_updated_by>jsavage</sys_updated_by>
        <sys_updated_on>2017-07-07 13:33:32</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=a5925deddb16f20075ea38ff9d961964"/>
</record_update>
