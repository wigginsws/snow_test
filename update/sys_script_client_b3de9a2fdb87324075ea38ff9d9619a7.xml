<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script_client">
    <sys_script_client action="INSERT_OR_UPDATE">
        <active>false</active>
        <applies_extended>false</applies_extended>
        <condition/>
        <description>Set default values for Diary Value</description>
        <field>diary_type</field>
        <global>true</global>
        <messages/>
        <name>CAM-Diary-Update Due Date by Type</name>
        <order/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading, isTemplate) {
	if (isLoading) {
		return;
	}
	
	console.log("[onChange] Diary type: " + newValue + ", due_date: " + g_form.getValue("due_date"));
	
	// Converts the date from a datetime object to MM/DD/YYYY
	function formatDateOnly(date) {
		var year = date.getFullYear();
		
		var month = (1 + date.getMonth()).toString();
		month = month.length > 1 ? month : '0' + month;
		
		var day = date.getDate().toString();
		day = day.length > 1 ? day : '0' + day;
		
		return month + '/' + day + '/' + year;
	}
	
	function getDueDate(days) {
		var dateTime = new Date(Date.now() + 864e5 * days);
		return dateTime;
	}
	
	if (newValue || newValue === '') { 
		console.log("[onChange] setting date, diary type " + newValue);
		g_form.clearValue('description');
		
		var due;
		var desc = "";
		//var cdt = g_scratchpad.cdt;
		var ga = new GlideAjax('x_norca_med_cam.cam_AddDays');
		ga.addParam('sysparm_name', 'addDays');
		
 		var gd = new GlideAjax('x_norca_med_cam.cam_ajax_DiaryUtils');
 		gd.addParam('sysparm_name','getDefaults');
 		gd.addParam('sysparm_diary_value', newValue);
 		gd.getXML(parseDefaults);
 		console.log("[onChange] after GlideAjax, diary record " + gd);

						
		switch(newValue) {
			
			case "provide_policy_dec_page":
			ga.addParam('sysparm_days', '2');
			//desc = "Hello Provide policy declaration page";
			break;
			
			case "coverage_issue_low_priority":
			ga.addParam('sysparm_days', '11');
			//desc = "Low Priority";
			break;
			
			case "coverage_issue_medium_priority":
			ga.addParam('sysparm_days', '10');
			//desc = "Medium Priority";
			break;
			
			case "coverage_issue_high_priority":
			ga.addParam('sysparm_days', '5');
			//desc = "URGENT";
			break;
			
			case "response_to_settlement_demand_5":
			ga.addParam('sysparm_days', '5');
			//desc = "Request to settlement demand.";
			break;
			
			case "response_to_settlement_demand_25":
			ga.addParam('sysparm_days', '25');
			//desc = "Request to settlement demand.";
			break;
			
			case "response_to_settlement_demand_30":
			ga.addParam('sysparm_days', '30');
			//desc = "Request to settlement demand.";
			break;
			
			case "request_for_information_from_counsel_5":
			ga.addParam('sysparm_days', '5');
			//desc = "Request of information counsel.";
			break;
			
			case "request_for_information_from_counsel_30":
			ga.addParam('sysparm_days', '30');
			//desc = "Request of information counsel.";
			break;
			
			case "indemnity_check_approval":
			ga.addParam('sysparm_days', '1');
			//desc = "Need indemnity check approval.";
			break;
			
			case "setting_final_reserves":
			ga.addParam('sysparm_days', '270');
			//desc = "Setting final reserves";
			break;
			
			case "state_payment_reporting_required_pending":
			ga.addParam('sysparm_days', '30');
			//desc = "State payment reporting required pending";
			break;
			
			case "npdb_reporting_req":
			ga.addParam('sysparm_days', '25');
			//desc = "NPDB reporting requirements";
			break;
			
			case "safe_harbor_reminder_150":
			ga.addParam('sysparm_days', '150');
			//desc = "Safe harbor reminder 150 days";
			break;
			
			case "safe_harbor_reminder_175":
			ga.addParam('sysparm_days', '175');
			//desc = "safe harbor reminder 175 days";
			break;
			
			case "safe_harbor_reminder_200":
			ga.addParam('sysparm_days', '200');
			//desc = "safe harbor reminder 200 days";
			break;
			
			case "pre_suit_reminder_30":
			ga.addParam('sysparm_days', '30');
			//desc = "Pre suit reminder 30 days";
			break;
			
			case "pre_suit_reminder_60":
			ga.addParam('sysparm_days', '60');
			//desc = "Pre suit reminder 60 days";
			break;
			
			case "adhoc":
			ga.addParam('sysparm_days', '2');
			//desc="";
			break;
			
			default:
			ga.addParam('sysparm_days', '2');
			//desc = "";
			break;
		}
		
		// --NONE--
		if (newValue === '') {
			due = "";
			desc = "";
		}
		
		ga.getXML(parseResponse);
		//g_form.setValue("description", desc);
		
	}
	
	// Due Date field read-only setting
	if (newValue !== '' && newValue !== 'adhoc') {
		g_form.setReadonly('due_date',true);
		
	}
	else {
		g_form.setReadonly('due_date',false);
		
	}
}

function parseResponse(response) {
	var answer = response.responseXML.documentElement.getAttribute("answer");
	console.log("[onChange] after GlideAjax, date record " + response.responseXML.documentElement);
	g_form.setValue("due_date", answer);
	//return answer;
}

function parseDefaults(dresponse) {
	var answer = dresponse.responseXML.documentElement.getAttribute("answer");
	var result = dresponse.responseXML.getElementsByTagName("result");
	var ldesc = result[0].getAttribute("comment");
	var dur = result[0].getAttribute("duration");
	console.log("response " + dresponse.responseXML.documentElement);
	console.log("answer " + answer);
	console.log("comment " + result[0].getAttribute("comment"));
	console.log("duration " + result[0].getAttribute("duration"));
	console.log("start " + result[0].getAttribute("startdt"));
	console.log("enddt " + result[0].getAttribute("endDate"));
	g_form.setValue('description', ldesc);
	
}



// function getDueDate(daysToAdd) {
// 	var now = new Date();
// 	return padNumber(now.getMonth() + 1) + "/" + padNumber(now.getDate() + daysToAdd) + "/" + padNumber(now.getFullYear());
// }

// function padNumber(number) {
// 	number = number.toString();
// 	if (number.length === 1) {
// 		return "0" + number;
// 	}
// 	return number;
// }
]]></script>
        <sys_class_name>sys_script_client</sys_class_name>
        <sys_created_by>rrao</sys_created_by>
        <sys_created_on>2017-06-05 17:55:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b3de9a2fdb87324075ea38ff9d9619a7</sys_id>
        <sys_mod_count>119</sys_mod_count>
        <sys_name>CAM-Diary-Update Due Date by Type</sys_name>
        <sys_overrides/>
        <sys_package display_value="Medical Claim Management" source="x_norca_med_cam">4427741adb53fe8023cdd92b5e961942</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Medical Claim Management">4427741adb53fe8023cdd92b5e961942</sys_scope>
        <sys_update_name>sys_script_client_b3de9a2fdb87324075ea38ff9d9619a7</sys_update_name>
        <sys_updated_by>mlindsay</sys_updated_by>
        <sys_updated_on>2017-10-27 12:48:11</sys_updated_on>
        <table>x_norca_med_cam_diary</table>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <view/>
    </sys_script_client>
</record_update>
